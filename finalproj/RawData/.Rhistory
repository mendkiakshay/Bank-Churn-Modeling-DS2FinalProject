y=c()
x=seq(0,N,length=N+1)
for(i in x){
y[i+1]=comb(N,i)[2]*beta(i+14,N-i+6)/beta(14,6)
}
barplot(y, names.arg = x, main = paste("n = ", N))
}
betaB(15)
N=15
y=c()
x=seq(0,N,length=N+1)
for(i in x){
y[i+1]=comb(N,i)*beta(i+14,N-i+6)/beta(14,6)
}
barplot(y, names.arg = x, main = paste("n = ", N))
comb = function(n, x) {
factorial(n) / factorial(n-x) / factorial(x)
}
betaB = function(N){
y=c()
x=seq(0,N,length=N+1)
for(i in x){
y[i+1]=comb(N,i)*beta(i+14,N-i+6)/beta(14,6)
}
barplot(y, names.arg = x, main = paste("n = ", N))
}
betaB(15)
betaB(50)
betaB(100)
betaB(500)
N = 500
y=c()
x=seq(0,N,length=N+1)
for(i in x){
y[i+1]=comb(N,i)*beta(i+14,N-i+6)/beta(14,6)
}
warnings()
choose(15,6)
betaB = function(N){
y=c()
x=seq(0,N,length=N+1)
for(i in x){
y[i+1]=choose(N,i)*beta(i+14,N-i+6)/beta(14,6)
}
barplot(y, names.arg = x, main = paste("n = ", N))
}
betaB(15)
betaB(50)
betaB(100)
betaB(500)
betaB(1000)
y1 = 6
x=seq(0,1,length=1000)
y=dbeta(x,15+y1,6+15-y1)
plot(x,y, type="l", main = "beta(14,6)")
y1 = 6
N = 15
x=seq(0,1,length=1000)
y=dbeta(x,14+y1,6+N-y1)
y1 = 400
N = 1000
x=seq(0,1,length=1000)
y=dbeta(x,14+y1,6+N-y1)
plot(x,y, type="l", main = "beta(14,6)")
betaPost = function(y1, N){
x=seq(0,1,length=1000)
y=dbeta(x,14+y1,6+N-y1)
plot(x,y, type="l", main = paste("Y = ",y1," n = ",N))
}
betaPost(6,15)
betaPost = function(y1, N){
x=seq(0,1,length=1000)
y=dbeta(x,14+y1,6+N-y1)
plot(x,y, type="l", main = paste("Y = ",y1,", n = ",N))
}
betaPost(6,15)
betaB(20,50)
betaB(40,100)
betaB(200,500)
betaB(400,1000)
betaPost(6,15)
betaPost(20,50)
betaPost(40,100)
betaPost(200,500)
betaPost(400,1000)
ggplot(cbind(x,y), type="l", main = paste("Y = ",y1,", n = ",N))
library(ggplot2)
ggplot(cbind(x,y), type="l", main = paste("Y = ",y1,", n = ",N))
ggplot(data.frame(x,y), type="l", main = paste("Y = ",y1,", n = ",N))
library(ggplot2)
library(gganimate)
install.packages("gganimate")
install.packages("gapminder")
install.packages("gifski")
library(ggplot2)
library(gganimate)
library(gapminder)
library(gifski)
library(rmutil)
install.packages("gifski")
library(ggplot2)
library(gganimate)
library(gapminder)
library(gifski)
library(rmutil)
install.packages("gganimate")
library(ggplot2)
library(gganimate)
library(gapminder)
library(gifski)
library(rmutil)
n15 = betaPost(6,15)
n50 = betaPost(20,50)
n100 = betaPost(40,100)
n500 = betaPost(200,500)
n1000 = betaPost(400,1000)
betaPost = function(y1, N){
x=seq(0,1,length=1000)
y=dbeta(x,14+y1,6+N-y1)
return(y)
#ggplot(data.frame(x,y), type="l", main = paste("Y = ",y1,", n = ",N))
}
n15 = betaPost(6,15)
n50 = betaPost(20,50)
n100 = betaPost(40,100)
n500 = betaPost(200,500)
n1000 = betaPost(400,1000)
betaPost = function(y1, N){
x=seq(0,1,length=100)
y=dbeta(x,14+y1,6+N-y1)
return(y)
#ggplot(data.frame(x,y), type="l", main = paste("Y = ",y1,", n = ",N))
}
n15 = betaPost(6,15)
n50 = betaPost(20,50)
n100 = betaPost(40,100)
n500 = betaPost(200,500)
n1000 = betaPost(400,1000)
df = data.frame(x = x, y = rbind(n15,n50,n100,n500,n1000), type = rep(c("15", "50", "100","500","1000"), each = 100))
y = rbind(n15,n50,n100,n500,n1000)
y = cbind(n15,n50,n100,n500,n1000)
df = data.frame(x = x, y = c(n15,n50,n100,n500,n1000), type = rep(c("15", "50", "100","500","1000"), each = 100))
ggplot(data = df, aes(x=x, y=val)) + geom_line(aes(colour=type)) + ggtitle(paste("Ridge Regression: ",plotTitle[ind])) +
xlab("Number of Variables") + ylab("R-Squared")
ggplot(data = df, aes(x=x, y=val)) + geom_line(aes(colour=type)) + ggtitle("Posterior Distribution") +
xlab("X") + ylab("Y")
ggplot(data = df, aes(x=x, y=y)) + geom_line(aes(colour=type)) + ggtitle("Posterior Distribution") +
xlab("X") + ylab("Y")
x=seq(0,1,length=100)
df = data.frame(x = x, y = c(n15,n50,n100,n500,n1000), type = rep(c("15", "50", "100","500","1000"), each = 100))
ggplot(data = df, aes(x=x, y=y)) + geom_line(aes(colour=type)) + ggtitle("Posterior Distribution") +
xlab("X") + ylab("Y")
x=seq(0,1,length=1000)
n15 = betaPost(6,15)
n50 = betaPost(20,50)
n100 = betaPost(40,100)
n500 = betaPost(200,500)
n1000 = betaPost(400,1000)
betaPost = function(y1, N){
x=seq(0,1,length=1000)
y=dbeta(x,14+y1,6+N-y1)
return(y)
#ggplot(data.frame(x,y), type="l", main = paste("Y = ",y1,", n = ",N))
}
n15 = betaPost(6,15)
n50 = betaPost(20,50)
n100 = betaPost(40,100)
n500 = betaPost(200,500)
n1000 = betaPost(400,1000)
df = data.frame(x = x, y = c(n15,n50,n100,n500,n1000), type = rep(c("15", "50", "100","500","1000"), each = 1000))
ggplot(data = df, aes(x=x, y=y)) + geom_line(aes(colour=type)) + ggtitle("Posterior Distribution") +
xlab("X") + ylab("Y")
ggplot(data = df, aes(x=x, y=y)) + geom_line(aes(colour=type)) + ggtitle("Posterior Distribution") +
xlab("X") + ylab("Y")+
transition_time(type)
install.packages("png")
ggplot(data = df, aes(x=x, y=y)) + geom_line(aes(colour=type)) + ggtitle("Posterior Distribution") +
xlab("X") + ylab("Y")+
transition_time(type)
ggplot(data = df, aes(x=x, y=y)) + geom_line(aes(colour=type)) + ggtitle("Posterior Distribution") +
xlab("X") + ylab("Y")+
transition_states(type, wrap = FALSE)
library(transformr)
install.packages("transformr")
ggplot(data = df, aes(x=x, y=y)) + geom_line(aes(colour=type)) + ggtitle("Posterior Distribution") +
xlab("X") + ylab("Y")+
transition_states(type, wrap = FALSE)
ggplot(data = df, aes(x=x, y=y)) + geom_line(aes(colour=type)) + ggtitle("Posterior Distribution") +
xlab("X") + ylab("Y")+
geom_point() +
transition_reveal(type)
ggplot(data = df, aes(x=x, y=y)) + geom_line(aes(colour=type)) + ggtitle("Posterior Distribution") +
xlab("X") + ylab("Y")+
geom_point() +
transition_reveal(factor(type))
ggplot(data = df, aes(x=x, y=y)) + geom_line(aes(colour=type)) + ggtitle("Posterior Distribution") +
xlab("X") + ylab("Y")+
geom_point() +
transition_reveal(x)
betaPost = function(y1, N){
x=seq(0,1,length=1000)
y=dbeta(x,14+y1,6+N-y1)
return(y)
}
n15 = betaPost(6,15)
n50 = betaPost(20,50)
n100 = betaPost(40,100)
n500 = betaPost(200,500)
n1000 = betaPost(400,1000)
df = data.frame(x = x, y = c(n15,n50,n100,n500,n1000), type = rep(c("15", "50", "100","500","1000"), each = 1000))
var = ggplot(data = df, aes(x=x, y=y)) + geom_line(aes(colour=type)) + ggtitle("Posterior Distribution") +
xlab("X") + ylab("Y")+
geom_point() +
transition_reveal(x)
var = animate(var)
anim_save("Problem 1 Part c.gif", var)
?rnorm
prnorm()
pnorm()
pnorm(1)
pnorm(.5)
pnorm(0)
qnorm(0)
qnorm(0.0000001)
qnorm(.75)
qnorm(7)
qnorm(.5)
qnorm(.99)
pnorm(79)
pnorm(0)
dnorm(x)
plot.xy()
plot(dnorm(x))
samp = rnorm(200,3,1)
sqrt(9)
a = normPost(.05)
normPost = function(sd){
x = seq(3-250,3+250,length=1000)
xbar = mean(samp)
se = sd/sqrt(200)
return(dnorm(x,xbar,se))
}
a = normPost(.05)
plot(a)
x = seq(3-250,3+250,length=1000)
?seq
x = seq(3-180,3+180,length=1000)
x
xbar = mean(samp)
se = sd/sqrt(200)
xbar = mean(samp)
se = .05/sqrt(200)
dnorm(x,xbar,se)
x = seq(3-180,3+180,length=100000)
dnorm(x,xbar,se)
y5 = dnorm(x,xbar,se)
sum(y5)
plot(x,y5)
plot(x,y5, lines = T)
plot(x,y5, type = 'l')
normPost = function(sd){
x = seq(3-6*sd,3+6*sd,length=100000)
xbar = mean(samp)
se = sd/sqrt(200)
return(dnorm(x,xbar,se))
}
plot(x,normPost(.05), type = 'l')
normPost = function(sd){
x = seq(3-6*sd,3+6*sd,length=100)
xbar = mean(samp)
se = sd/sqrt(200)
return(dnorm(x,xbar,se))
}
plot(x,normPost(.05), type = 'l')
normPost(.05)
x = seq(3-6*sd,3+6*sd,length=1000)
xbar = mean(samp)
se = sd/sqrt(200)
return(dnorm(x,xbar,se))
}
normPost = function(sd){
x = seq(3-6*sd,3+6*sd,length=1000)
xbar = mean(samp)
se = sd/sqrt(200)
return(dnorm(x,xbar,se))
}
normPost(.05)
plot(x,normPost(.05), type = 'l')
x = seq(3-6*sd,3+6*sd,length=1000)
x = seq(3-6*.05,3+6*.05,length=1000)
plot(x,normPost(.05), type = 'l')
plot(x,normPost(50), type = 'l')
normPost = function(sd){
x = seq(3-3*.05,3+3*.05,length=1000)
xbar = mean(samp)
se = sd/sqrt(200)
return(dnorm(x,xbar,se))
}
normPost = function(sd){
x = seq(3-100,3+100,length=10000)
xbar = mean(samp)
se = sd/sqrt(200)
return(dnorm(x,xbar,se))
}
a = normPost(.05)
x = seq(3-100,3+100,length=10000)
plot(x,a, type = 'l')
a = normPost(50
)
plot(x,a, type = 'l')
normPost = function(sd){
x = seq(3-25,3+25,length=10000)
xbar = mean(samp)
se = sd/sqrt(200)
return(dnorm(x,xbar,se))
}
a = normPost(50
)
plot(x,a, type = 'l')
x = seq(3-25,3+25,length=10000)
plot(x,a, type = 'l')
x = seq(3-10,3+10,length=10000)
normPost = function(sd){
x = seq(3-10,3+10,length=10000)
xbar = mean(samp)
se = sd/sqrt(200)
return(dnorm(x,xbar,se))
}
a = normPost(50)
plot(x,a, type = 'l')
a = normPost(.05)
plot(x,a, type = 'l')
a = normPost(.05)
b = normPost(.5)
c = normPost(1)
d = normPost(5)
e = normPost(10)
f = normPost(50)
df = data.frame(x = x, y = c(a,b,c,d,e,f), type = rep(c(".05", ".5", "1","5","10","50"), each = 10000))
ggplot(data = df, aes(x=x, y=y)) + geom_line(aes(colour=type)) + ggtitle("Posterior Distribution") +
xlab("X") + ylab("Y")
var = ggplot(data = df, aes(x=x, y=y)) + geom_line(aes(colour=type)) + ggtitle("Posterior Distribution") +
xlab("X") + ylab("Y")+
geom_point() +
transition_reveal(x)
var = animate(var)
anim_save("Problem 2 Part d.gif", var)
x = seq(5-10,5+10,length=10000)
normPost = function(sd){
x = seq(5-10,5+10,length=10000)
xbar = mean(samp)
se = sd/sqrt(200)
return(dnorm(x,xbar,se))
}
a = normPost(.05)
b = normPost(.5)
c = normPost(1)
d = normPost(5)
e = normPost(10)
f = normPost(50)
df = data.frame(x = x, y = c(a,b,c,d,e,f), type = rep(c(".05", ".5", "1","5","10","50"), each = 10000))
var = ggplot(data = df, aes(x=x, y=y)) + geom_line(aes(colour=type)) + ggtitle("Posterior Distribution") +
xlab("X") + ylab("Y")+
geom_point() +
transition_reveal(x)
var = animate(var)
anim_save("Problem 2 Part e1.gif", var)
x = seq(10-10,10+10,length=10000)
normPost = function(sd){
x = seq(10-10,10+10,length=10000)
xbar = mean(samp)
se = sd/sqrt(200)
return(dnorm(x,xbar,se))
}
a = normPost(.05)
b = normPost(.5)
c = normPost(1)
d = normPost(5)
e = normPost(10)
f = normPost(50)
df = data.frame(x = x, y = c(a,b,c,d,e,f), type = rep(c(".05", ".5", "1","5","10","50"), each = 10000))
var = ggplot(data = df, aes(x=x, y=y)) + geom_line(aes(colour=type)) + ggtitle("Posterior Distribution") +
xlab("X") + ylab("Y")+
geom_point() +
transition_reveal(x)
var = animate(var)
anim_save("Problem 2 Part e2.gif", var)
x = seq(3-10,3+10,length=10000)
x = seq(3-10,3+10,length=10000)
xbar = mean(samp)
se = sd/sqrt(200)
normPost = function(sd){
x = seq(3-10,3+10,length=10000)
xbar = mean(samp)
se = sd/sqrt(200)
return(dnorm(x,xbar,se))
}
a = normPost(.05)
b = normPost(.5)
c = normPost(1)
d = normPost(5)
e = normPost(10)
f = normPost(50)
df = data.frame(x = x, y = c(a,b,c,d,e,f), type = rep(c(".05", ".5", "1","5","10","50"), each = 10000))
var = ggplot(data = df, aes(x=x, y=y)) + geom_line(aes(colour=type)) + ggtitle("Posterior Distribution") +
xlab("X") + ylab("Y")+
geom_point() +
transition_reveal(x)
var = animate(var)
anim_save("Problem 2 Part d.gif", var)
dat = read.csv("/Users/zachbaker/Documents/Senior Year/Spring Semester/DS2/Final Project/Churn_Modelling.csv")
dat
?sample
sa = sample(dat,9000)
sa = sample(dat[,1:14],9000)
s = sample(1:nrow(dat),9000)
dat.train = dat[sample(1:nrow(dat),9000)]
dat.train = dat[sample(1:nrow(dat),9000),]
summary(dat.train$Exited)
sum(dat.train$Exited)
sum(dat)
sum(dat$Exited)
2037/10000
1819/9000
sampInd = sample(1:nrow(dat),9000)
dat.train = dat[sampInd,]
sum(dat.train$Exited)
1832/9000
set.seed(1224)
sampInd = sample(1:nrow(dat),9000)
dat.train = dat[sampInd,]
sampVal = sample(1:nrow(dat.train),1000)
dat.train = dat.train[-sampVal,]
dat.validate = dat.train[sampVal,]
dat.test = dat[-sampInd,]
sum(dat.train$Exited)/9000
sum(dat.validate$Exited)/1000
sum(dat.test$Exited)/1000
sum(dat$Exited)/10000
dat.validate$Exited
dat.test$Exited
dat$Exited
summary(dat$Exited)
set.seed(1224)
sampInd = sample(1:nrow(dat),9000)
dat.train = dat[sampInd,]
sampVal = sample(1:nrow(dat.train),1000)
dat.validate = dat.train[sampVal,]
dat.train = dat.train[-sampVal,]
dat.test = dat[-sampInd,]
sum(dat.train$Exited)/8000
sum(dat.validate$Exited)/1000
sum(dat.test$Exited)/1000
sum(dat$Exited)/10000
set.seed(124)
sampInd = sample(1:nrow(dat),9000)
dat.train = dat[sampInd,]
sampVal = sample(1:nrow(dat.train),1000)
dat.validate = dat.train[sampVal,]
dat.train = dat.train[-sampVal,]
dat.test = dat[-sampInd,]
sum(dat.train$Exited)/8000
sum(dat.validate$Exited)/1000
sum(dat.test$Exited)/1000
sum(dat$Exited)/10000
wd()
getwd()
setwd("/Users/zachbaker/Documents/Senior Year/Spring Semester/DS2/Final Project/")
getwd()
?write.csv
write.csv(dat.train,"Churn.train.csv")
write.csv(dat.test,"Churn.test.csv")
write.csv(dat.validate,"Churn.validate.csv")
dat = read.csv("/Users/zachbaker/Documents/Senior Year/Spring Semester/DS2/Final Project/Churn_Modelling.csv")
dat = read.csv("/Users/zachbaker/Documents/Senior Year/Spring Semester/DS2/Final Project/finalproj/RawData/Churn_Modelling.csv")
set.seed(124)
sampInd = sample(1:nrow(dat),9000)
dat.train = dat[sampInd,]
sampVal = sample(1:nrow(dat.train),1000)
dat.validate = dat.train[sampVal,]
dat.train = dat.train[-sampVal,]
dat.test = dat[-sampInd,]
sum(dat.train$Exited)/8000
sum(dat.validate$Exited)/1000
sum(dat.test$Exited)/1000
sum(dat$Exited)/10000
setwd("/Users/zachbaker/Documents/Senior Year/Spring Semester/DS2/Final Project/finalproj/RawData/")
write.csv(dat.train,"Churn.train.csv")
write.csv(dat.test,"Churn.test.csv")
write.csv(dat.validate,"Churn.validate.csv")
average(dat$Balance)
mean(dat$Balance)
mean(dat.test$Balance)
mean(dat.train$Balance)
mean(dat.test$CreditScore)
mean(dat$CreditScore)
sum(dat.test$France)
sum(dat$France)
sum(dat.test$France)/1000
sum(dat$France)/10000
sum(dat.test$Germany)/1000
sum(dat$Germany)/10000
sum(dat$Gender)/10000
sum(dat.test$Gender)/1000
mean(dat$EstimatedSalary)
mean(dat.test$EstimatedSalary)
View(dat.test)
View(dat.test)
View(dat.train)
View(dat.train)
View(dat.validate)
View(dat.validate)
